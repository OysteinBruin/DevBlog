@page "/"
@using BlogClient.Models;
@using DevBlog.Infrastructure.Interfaces;
@using System.Text;
@using Newtonsoft.Json.Linq;
@using Newtonsoft.Json;
@using System.Net.Http.Json;
@inject HttpClient Http
@inject NavigationManager NavManager
@inject IBlogPostService BlodDataServioce


<PageTitle>Øystein Bruin - blog</PageTitle>


<MudContainer Class="mt-16" MaxWidth="MaxWidth.Medium">
    <MudText Typo="Typo.h3" Align="Align.Center" GutterBottom="true">Posts</MudText>
    @if (result == null)
    {
        <p><em>Loading...</em></p>
        @if (showError)
        {
            <p class="text-base leading-relaxed xl:w-2/4 lg:w-3/4 mx-auto text-gray-500s">@errorMsg</p>
        }
    }
    else
    {
        <MudText Typo="Typo.h4">Blog App</MudText>
        <MudText Typo="Typo.body1">The perfect blog application build using leading open source headless CSM called Strapi and Blazor.</MudText>
        <p>Categories:</p>
        <MudChipSet Filter="true" Mandatory="true" Class="mt-12 mb-12">
            <MudChip Text="Center" SelectedColor="Color.Primary" Default="true" />
            <MudChip Text="Top" SelectedColor="Color.Primary" />
            <MudChip Text="Bottom" SelectedColor="Color.Primary" />
            <MudChip Text="Left" SelectedColor="Color.Primary" />
            <MudChip Text="Left Top" SelectedColor="Color.Primary" />
        </MudChipSet>

        <MudGrid>

            @foreach (var post in result.data)
            {
                <MudItem xs="12" sm="6" md="4" lg="2">
                    <MudCard>
                        <MudCardMedia Image="@post.attributes.imageUrl" Height="200" />
                        <MudCardContent>
                            <MudText Typo="Typo.h5">@post.attributes.title</MudText>
                            <MudText Typo="Typo.body2" Class="mt-4">@FormatDescription(post.attributes.description)</MudText>
                        </MudCardContent>
                        <MudCardActions>
                            <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="() => OnReadMore(post.id)">Read More</MudButton>
                        </MudCardActions>
                    </MudCard>
                </MudItem>
            }

        </MudGrid>
    }
</MudContainer>

@code {
    private AllPostsPagedModel result = null;
    bool showError = false;
    string errorMsg = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        //var result = BlogDataService.GetDatatest();
        try
        {
            result = await BlodDataServioce.GetAllPostsPaged();
        }
        catch (Exception ex)
        {
            StringBuilder strBuilder = new StringBuilder("Exception thrown: ");
            strBuilder.AppendLine(ex.Message);
            errorMsg = strBuilder.ToString();
            showError = true;
        }
    }

    private async void OnReadMore(int id)
    {
        NavManager.NavigateTo($"post/{id.ToString()}");
    }

    private string FormatDescription(string? description)
    {
        if (description is null)
            return string.Empty;

        if (description.Length <= 50)
            return description;

        return description.Substring(0, 50) + "...";
    }
}